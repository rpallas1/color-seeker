//
//  DefaultDataHelper.swift
//  ColorSeeker
//
//  Created by Ryan Pallas on 6/11/24.
//

import Foundation
import SwiftUI
import SwiftData

class DefaultDataHelper {
		private var context: ModelContext
		
		init(context: ModelContext) {
				self.context = context
		}
		
		func initStats() {
				context.insert(StatModel(difficuly: "Overall", index: 0))
				context.insert(StatModel(difficuly: "Easy", index: 1))
				context.insert(StatModel(difficuly: "Medium", index: 2))
				context.insert(StatModel(difficuly: "Hard", index: 3))
				context.insert(StatModel(difficuly: "Extreme", index: 4))
				context.insert(StatModel(difficuly: "Survival", index: 5))
		}
		
		func initAchievemnets() {
				context.insert(AchievementModel(difficulty: "Overall",
																				index: 0,
																				groups: [GroupModel(name: "Games Played",
																											 index: 0,
																											 descriptionString: "Play _ games",
																											 progress: 0,
																											 goals: [Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 2500, isComplete: false),
																															 Goal(value: 5000, isComplete: false)]),
																								 GroupModel(name: "Perfect Games",
																											 index: 1,
																											 descriptionString: "Play _ perfect games",
																											 progress: 0,
																											 goals: [Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false),
																															 Goal(value: 2500, isComplete: false)]),
																								 GroupModel(name: "Streaks",
																											 index: 2,
																											 descriptionString: "Get a win streak of _",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 2000, isComplete: false)])]))
				context.insert(AchievementModel(difficulty: "Easy",
																				index: 1,
																				groups: [GroupModel(name: "Games Played",
																											 index: 0,
																											 descriptionString: "Play _ games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false)]),
																								 GroupModel(name: "Perfect Games",
																											 index: 1,
																											 descriptionString: "Play _ perfect games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 750, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Streaks",
																											 index: 2,
																											 descriptionString: "Get a win streak of _",
																											 progress: 0,
																											 goals: [Goal(value: 25, isComplete: false),
																															 Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Times",
																											 index: 3,
																											 descriptionString: "Win _ games under - seconds",
																											 progress: 0,
																											 goals: [Goal(value: 250, time: 12, isComplete: false),
																															 Goal(value: 500, time: 12, isComplete: false),
																															 Goal(value: 1000, time: 12, isComplete: false),
																															 Goal(value: 100, time: 10, isComplete: false),
																															 Goal(value: 250, time: 10, isComplete: false),
																															 Goal(value: 500, time: 10, isComplete: false)]),
																								 GroupModel(name: "Best Time",
																														index: 4,
																														descriptionString: "Win _ game under - seconds",
																														progress: 0,
																														goals: [Goal(value: 1, time: 9.5, isComplete: false),
																																		Goal(value: 1, time: 9, isComplete: false),
																																		Goal(value: 1, time: 8.7, isComplete: false)])]))
				context.insert(AchievementModel(difficulty: "Medium",
																				index: 2,
																				groups: [GroupModel(name: "Games Played",
																											 index: 0,
																											 descriptionString: "Play _ games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false)]),
																								 GroupModel(name: "Perfect Games",
																											 index: 1,
																											 descriptionString: "Play _ perfect games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 750, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Streaks",
																											 index: 2,
																											 descriptionString: "Get a win streak of _",
																											 progress: 0,
																											 goals: [Goal(value: 25, isComplete: false),
																															 Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Times",
																											 index: 3,
																											 descriptionString: "Win _ games under - seconds",
																											 progress: 0,
																														// 12s and 10s
																											 goals: [Goal(value: 250, time: 14, isComplete: false),
																															 Goal(value: 500, time: 14, isComplete: false),
																															 Goal(value: 1000, time: 14, isComplete: false),
																															 Goal(value: 100, time: 11, isComplete: false),
																															 Goal(value: 250, time: 11, isComplete: false),
																															 Goal(value: 500, time: 11, isComplete: false)]),
																								 GroupModel(name: "Best Time",
																														index: 4,
																														descriptionString: "Win _ game under - seconds",
																														progress: 0,
																														// 9.7s, 9.4s, 9s
																														goals: [Goal(value: 1, time: 10, isComplete: false),
																																		Goal(value: 1, time: 9.7, isComplete: false),
																																		Goal(value: 1, time: 9.4, isComplete: false)])]))
				context.insert(AchievementModel(difficulty: "Hard",
																				index: 3,
																				groups: [GroupModel(name: "Games Played",
																											 index: 0,
																											 descriptionString: "Play _ games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false)]),
																								 GroupModel(name: "Perfect Games",
																											 index: 1,
																											 descriptionString: "Play _ perfect games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 750, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Streaks",
																											 index: 2,
																											 descriptionString: "Get a win streak of _",
																											 progress: 0,
																											 goals: [Goal(value: 25, isComplete: false),
																															 Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Times",
																											 index: 3,
																											 descriptionString: "Win _ games under - seconds",
																											 progress: 0,
																														//13/11.5
																											 goals: [Goal(value: 250, time: 15, isComplete: false),
																															 Goal(value: 500, time: 15, isComplete: false),
																															 Goal(value: 1000, time: 15, isComplete: false),
																															 Goal(value: 100, time: 12, isComplete: false),
																															 Goal(value: 250, time: 12, isComplete: false),
																															 Goal(value: 500, time: 12, isComplete: false)]),
																								 GroupModel(name: "Best Time",
																														index: 4,
																														descriptionString: "Win _ game under - seconds",
																														progress: 0,
																														goals: [Goal(value: 1, time: 10.4, isComplete: 				false),
																																		Goal(value: 1, time: 10.2, isComplete: false),
																																		Goal(value: 1, time: 10, isComplete: false)])]))
				context.insert(AchievementModel(difficulty: "Extreme",
																				index: 4,
																				groups: [GroupModel(name: "Games Played",
																											 index: 0,
																											 descriptionString: "Play _ games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false)]),
																								 GroupModel(name: "Perfect Games",
																											 index: 1,
																											 descriptionString: "Play _ perfect games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 750, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Streaks",
																											 index: 2,
																											 descriptionString: "Get a win streak of _",
																											 progress: 0,
																											 goals: [Goal(value: 25, isComplete: false),
																															 Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false)]),
																								 GroupModel(name: "Times",
																											 index: 3,
																											 descriptionString: "Win _ games under - seconds",
																											 progress: 0,
																											 goals: [Goal(value: 250, time: 19, isComplete: false),
																															 Goal(value: 500, time: 19, isComplete: false),
																															 Goal(value: 1000, time: 19, isComplete: false),
																															 Goal(value: 100, time: 16, isComplete: false),
																															 Goal(value: 250, time: 16, isComplete: false),
																															 Goal(value: 500, time: 16, isComplete: false)]),
																								 GroupModel(name: "Best Time",
																														index: 4,
																														descriptionString: "Win _ game under - seconds",
																														progress: 0,
																														goals: [Goal(value: 1, time: 14.2, isComplete: false),
																																		Goal(value: 1, time: 14, isComplete: false),
																																		Goal(value: 1, time: 13.8, isComplete: false)])]))
				context.insert(AchievementModel(difficulty: "Survival",
																				index: 5,
																				groups: [GroupModel(name: "Games Played",
																											 index: 0,
																											 descriptionString: "Play _ games",
																											 progress: 0,
																											 goals: [Goal(value: 50, isComplete: false),
																															 Goal(value: 100, isComplete: false),
																															 Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false)]),
																								 GroupModel(name: "High Scores",
																											 index: 3,
																											 descriptionString: "Get a high score of _",
																											 progress: 0,
																											 goals: [Goal(value: 250, isComplete: false),
																															 Goal(value: 500, isComplete: false),
																															 Goal(value: 750, isComplete: false),
																															 Goal(value: 1000, isComplete: false),
																															 Goal(value: 1500, isComplete: false),
																															 Goal(value: 2000, isComplete: false)])]))
		}
		
}
